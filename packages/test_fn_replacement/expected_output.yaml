apiVersion: v1
kind: Namespace
metadata:
  annotations:
    config.kubernetes.io/path: namespace_flux.yaml
  name: flux
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    config.kubernetes.io/path: customresourcedefinition_helmreleases.helm.fluxcd.io.yaml
  name: helmreleases.helm.fluxcd.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.releaseName
    description: ReleaseName is the name of the Helm release managed by the HelmRelease, as given by Helm.
    name: Release
    type: string
  - JSONPath: .status.phase
    description: Phase is the current release phase being performed for the HelmRelease.
    name: Phase
    type: string
  - JSONPath: .status.releaseStatus
    description: ReleaseStatus is the status of the Helm release managed by the HelmRelease, as given by Helm.
    name: Status
    type: string
  - JSONPath: .status.conditions[?(@.type=="Released")].message
    name: Message
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: helm.fluxcd.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
    - hr
    - hrs
    singular: helmrelease
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: HelmRelease is a type to represent a Helm release.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            chart:
              properties:
                chartPullSecret:
                  description: ChartPullSecret holds the reference to the authentication secret for accessing the Helm repository using HTTPS basic auth. NOT IMPLEMENTED!
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                git:
                  description: Git URL is the URL of the Git repository, e.g. git@github.com:org/repo, http://github.com/org/repo, or ssh://git@example.com:2222/org/repo.git.
                  type: string
                name:
                  description: Name is the name of the Helm chart _without_ an alias, e.g. redis (for `helm upgrade [flags] stable/redis`).
                  type: string
                path:
                  description: Path is the path to the chart relative to the repository root.
                  type: string
                ref:
                  description: Ref is the Git branch (or other reference) to use. Defaults to 'master', or the configured default Git ref.
                  type: string
                repository:
                  description: RepoURL is the URL of the Helm repository, e.g. https://kubernetes-charts.storage.googleapis.com or https://charts.example.com.
                  type: string
                secretRef:
                  description: SecretRef holds the authentication secret for accessing the Git repository (over HTTPS). The credentials will be added to an HTTPS GitURL before the mirror is started.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                skipDepUpdate:
                  description: SkipDepUpdate will tell the operator to skip running 'helm dep update' before installing or upgrading the chart, the chart dependencies _must_ be present for this to succeed.
                  type: boolean
                version:
                  description: Version is the targeted Helm chart version, e.g. 7.0.1.
                  type: string
              type: object
            forceUpgrade:
              description: Force will mark this Helm release to `--force` upgrades. This forces the resource updates through delete/recreate if needed.
              type: boolean
            helmVersion:
              description: 'HelmVersion is the version of Helm to target. If not supplied, the lowest _enabled Helm version_ will be targeted. Valid HelmVersion values are: "v2", "v3"'
              enum:
              - v2
              - v3
              type: string
            maxHistory:
              description: MaxHistory is the maximum amount of revisions to keep for the Helm release. If not supplied, it defaults to 10.
              type: integer
            releaseName:
              description: ReleaseName is the name of the The Helm release. If not supplied, it will be generated by affixing the namespace to the resource name.
              type: string
            resetValues:
              description: ResetValues will mark this Helm release to reset the values to the defaults of the targeted chart before performing an upgrade. Not explicitly setting this to `false` equals to `true` due to the declarative nature of the operator.
              type: boolean
            rollback:
              description: The rollback settings for this Helm release.
              properties:
                disableHooks:
                  description: DisableHooks will mark this Helm release to prevent hooks from running during the rollback.
                  type: boolean
                enable:
                  description: Enable will mark this Helm release for rollbacks.
                  type: boolean
                force:
                  description: Force will mark this Helm release to `--force` rollbacks. This forces the resource updates through delete/recreate if needed.
                  type: boolean
                maxRetries:
                  description: MaxRetries is the maximum amount of upgrade retries the operator should make before bailing.
                  format: int64
                  type: integer
                recreate:
                  description: Recreate will mark this Helm release to `--recreate-pods` for if applicable. This performs pod restarts.
                  type: boolean
                retry:
                  description: Retry will mark this Helm release for upgrade retries after a rollback.
                  type: boolean
                timeout:
                  description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during rollback.
                  format: int64
                  type: integer
                wait:
                  description: Wait will mark this Helm release to wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.
                  type: boolean
              type: object
            skipCRDs:
              description: SkipCRDs will mark this Helm release to skip the creation of CRDs during a Helm 3 installation.
              type: boolean
            targetNamespace:
              description: TargetNamespace overrides the targeted namespace for the Helm release. The default namespace equals to the namespace of the HelmRelease resource.
              type: string
            timeout:
              description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during installation and upgrade operations.
              format: int64
              type: integer
            valueFileSecrets:
              description: ValueFileSecrets holds the local name references to secrets. DEPRECATED, use ValuesFrom.secretKeyRef instead.
              items:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              type: array
            values:
              description: Values holds the values for this Helm release.
              type: object
            valuesFrom:
              items:
                properties:
                  chartFileRef:
                    description: The reference to a local chart file with release values.
                    properties:
                      optional:
                        description: Optional will mark this ChartFileSelector as optional. The result of this are that operations are permitted without the source, due to it e.g. being temporarily unavailable.
                        type: boolean
                      path:
                        description: Path is the file path to the source relative to the chart root.
                        type: string
                    required:
                    - path
                    type: object
                  configMapKeyRef:
                    description: The reference to a config map with release values.
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      optional:
                        type: boolean
                    required:
                    - name
                    type: object
                  externalSourceRef:
                    description: The reference to an external source with release values.
                    properties:
                      optional:
                        description: Optional will mark this ExternalSourceSelector as optional. The result of this are that operations are permitted without the source, due to it e.g. being temporarily unavailable.
                        type: boolean
                      url:
                        description: URL is the URL of the external source.
                        type: string
                    required:
                    - url
                    type: object
                  secretKeyRef:
                    description: The reference to a secret with release values.
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      optional:
                        type: boolean
                    required:
                    - name
                    type: object
                type: object
              type: array
            wait:
              description: Wait will mark this Helm release to wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful.
              type: boolean
          required:
          - chart
          type: object
        status:
          description: HelmReleaseStatus contains status information about an HelmRelease.
          properties:
            conditions:
              description: Conditions contains observations of the resource's state, e.g., has the chart which it refers to been fetched.
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the timestamp corresponding to the last status change of this condition.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: LastUpdateTime is the timestamp corresponding to the last status update of this condition.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable description of the details of the last transition, complementing reason.
                    type: string
                  reason:
                    description: Reason is a brief machine readable explanation for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of ('True', 'False', 'Unknown').
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                    type: string
                  type:
                    description: Type of the condition, one of ('ChartFetched', 'Released', 'RolledBack').
                    enum:
                    - ChartFetched
                    - Released
                    - RolledBack
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            observedGeneration:
              description: ObservedGeneration is the most recent generation observed by the operator.
              format: int64
              type: integer
            phase:
              description: Phase the release is in, one of ('ChartFetched', 'ChartFetchFailed', 'Installing', 'Upgrading', 'Succeeded', 'RollingBack', 'RolledBack', 'RollbackFailed')
              enum:
              - ChartFetched
              - ChartFetchFailed
              - Installing
              - Upgrading
              - Succeeded
              - Failed
              - RollingBack
              - RolledBack
              - RollbackFailed
              type: string
            releaseName:
              description: ReleaseName is the name as either supplied or generated.
              type: string
            releaseStatus:
              description: ReleaseStatus is the status as given by Helm for the release managed by this resource.
              type: string
            revision:
              description: Revision holds the Git hash or version of the chart currently deployed.
              type: string
            rollbackCount:
              description: RollbackCount records the amount of rollback attempts made, it is incremented after a rollback failure and reset after a successful upgrade or revision change.
              format: int64
              type: integer
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    config.kubernetes.io/path: flux/serviceaccount_helm-operator.yaml
  labels:
    name: helm-operator
  name: helm-operator
  namespace: flux
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    config.kubernetes.io/path: clusterrole_helm-operator.yaml
  labels:
    name: helm-operator
  name: helm-operator
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    config.kubernetes.io/path: clusterrolebinding_helm-operator.yaml
  labels:
    name: helm-operator
  name: helm-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: helm-operator
subjects:
- kind: ServiceAccount
  name: helm-operator
  namespace: flux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    config.kubernetes.io/path: flux/deployment_helm-operator.yaml
  name: helm-operator
  namespace: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      name: helm-operator
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        name: helm-operator
    spec:
      containers:
      - args:
        - --enabled-helm-versions=v3
        image: docker.io/fluxcd/helm-operator:1.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3030
          initialDelaySeconds: 1
          timeoutSeconds: 5
        name: helm-operator
        ports:
        - containerPort: 3030
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3030
          initialDelaySeconds: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
      dnsConfig:
        nameservers:
        - 10.96.0.10
        options:
        - name: ndots
          value: "1"
      dnsPolicy: None
      nodeSelector:
        node-type: controlplane
      serviceAccountName: helm-operator
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
---
apiVersion: airshipit.org/v1alpha1
data:
  identity:
    host_fqdn_override:
      admin:
        host: identity-sw.test-site.com
      default: null
      public:
        host: identity-sw.test-site.com
    hosts:
      default: keystone
      internal: keystone-api
    name: keystone
    namespace: openstack
    path:
      default: /v3
    port:
      api:
        default: 443
        internal: 5000
    scheme:
      default: https
      internal: http
  oslo_cache:
    host_fqdn_override:
      default: null
    hosts:
      default: memcached
    port:
      memcache:
        default: 11211
  oslo_db:
    host_fqdn_override:
      default: null
    hosts:
      default: mariadb
    namespace: osh-infra
    path: /DB_NAME
    port:
      mysql:
        default: 3306
    scheme: mysql+pymysql
  oslo_messaging:
    host_fqdn_override:
      default: null
    hosts:
      default: rabbitmq
    namespace: null
    path: /keystone
    port:
      amqp:
        default: 5672
    scheme: rabbit
    statefulset:
      name: airship-ucp-rabbitmq-rabbitmq
kind: VariableCatalogue
metadata:
  annotations:
    config.kubernetes.io/path: openstack/variablecatalogue_openstack-endpoint-catalogue.yaml
  labels:
    airshipit.org/deploy-k8s: "false"
  name: openstack-endpoint-catalogue
  namespace: openstack
---
apiVersion: airshipit.org/v1alpha1
data:
  alerts:
    host_fqdn_override:
      default: null
    hosts:
      default: alerts-engine
      discovery: alertmanager-discovery
      public: alertmanager
    name: alertmanager
    namespace: osh-infra
    path:
      default: null
    port:
      api:
        default: 9093
        public: 80
      mesh:
        default: 6783
    scheme:
      default: http
  fluentd:
    host_fqdn_override:
      default: null
    hosts:
      default: fluentd-logging
    name: fluentd
    namespace: osh-infra
    path:
      default: null
    port:
      metrics:
        default: 24220
      service:
        default: 24224
    scheme:
      default: http
  monitoring:
    host_fqdn_override:
      default: null
    hosts:
      default: prom-metrics
      public: prometheus
    name: prometheus
    namespace: osh-infra
    path:
      default: null
    port:
      api:
        default: 9090
      http:
        default: 80
    scheme:
      default: http
  prometheus_fluentd_exporter:
    host_fqdn_override:
      default: null
    hosts:
      default: fluentd-exporter
    namespace: osh-infra
    path:
      default: /metrics
    port:
      metrics:
        default: 9309
    scheme:
      default: http
kind: VariableCatalogue
metadata:
  annotations:
    config.kubernetes.io/path: osh-infra/variablecatalogue_lma-endpoint-catalogue.yaml
  labels:
    airshipit.org/deploy-k8s: "false"
  name: lma-endpoint-catalogue
  namespace: osh-infra
---
apiVersion: airshipit.org/v1alpha1
data:
  domain: test-site.com
kind: VariableCatalogue
metadata:
  annotations:
    config.kubernetes.io/path: variablecatalogue_site-networking-catalogue.yaml
  labels:
    airshipit.org/deploy-k8s: "false"
  name: site-networking-catalogue
---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  annotations:
    config.kubernetes.io/path: openstack/helmrelease_keystone.yaml
  labels:
    airshipit.org/function: keystone
  name: keystone
  namespace: openstack
spec:
  chart:
    git: https://opendev.org/openstack/openstack-helm
    path: .
    ref: master
  timeout: 600
  values:
    endpoints:
      fluentd:
        host_fqdn_override:
          default: null
        hosts:
          default: fluentd-logging
        name: fluentd
        namespace: osh-infra
        path:
          default: null
        port:
          metrics:
            default: 24220
          service:
            default: 24224
        scheme:
          default: http
      identity:
        host_fqdn_override:
          admin:
            host: identity-sw.test-site.com
          default: null
          public:
            host: identity-sw.test-site.com
        hosts:
          default: keystone
          internal: keystone-api
        name: keystone
        namespace: openstack
        path:
          default: /v3
        port:
          api:
            default: 443
            internal: 5000
        scheme:
          default: https
          internal: http
      oslo_cache:
        host_fqdn_override:
          default: null
        hosts:
          default: memcached
        port:
          memcache:
            default: 11211
      oslo_db:
        host_fqdn_override:
          default: null
        hosts:
          default: mariadb
        namespace: osh-infra
        path: /DB_NAME
        port:
          mysql:
            default: 3306
        scheme: mysql+pymysql
      oslo_messaging:
        host_fqdn_override:
          default: null
        hosts:
          default: rabbitmq
        namespace: null
        path: /keystone
        port:
          amqp:
            default: 5672
        scheme: rabbit
        statefulset:
          name: airship-ucp-rabbitmq-rabbitmq
  wait: true
---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  annotations:
    config.kubernetes.io/path: osh-infra/helmrelease_prometheus.yaml
  labels:
    airshipit.org/function: prometheus
  name: prometheus
  namespace: osh-infra
spec:
  chart:
    name: prometheus
    repository: https://kubernetes-charts.storage.googleapis.com
    version: 11.0.4
  timeout: 600
  values:
    endpoints:
      alerts:
        host_fqdn_override:
          default: null
        hosts:
          default: alerts-engine
          discovery: alertmanager-discovery
          public: alertmanager
        name: alertmanager
        namespace: osh-infra
        path:
          default: null
        port:
          api:
            default: 9093
            public: 80
          mesh:
            default: 6783
        scheme:
          default: http
      monitoring:
        host_fqdn_override:
          default: null
        hosts:
          default: prom-metrics
          public: prometheus
        name: prometheus
        namespace: osh-infra
        path:
          default: null
        port:
          api:
            default: 9090
          http:
            default: 80
        scheme:
          default: http
    server:
      service:
        type: NodePort
  wait: true
